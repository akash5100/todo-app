import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Cards from "../components/Cards";
import { useEffect, useState } from "react";
import axios from "axios";

export default function Home() {
    const [formData, setFormData] = useState({
        title: "",
        description: "",
    });
    const [tasks, setTasks] = useState([]);
    const [completed, setCompleted] = useState([]);

    useEffect(() => {
        fetch("/api/getTask")
            .then((response) => response.json())
            .then((data) => {
                var buffer = data["data"];
                var completed = [];
                var notCompleted = [];
                for (var i = 0; i < buffer.length; i++) {
                    if (buffer[i]["completed"]) {
                        completed.push(buffer[i]);
                    } else {
                        notCompleted.push(buffer[i]);
                    }
                }
                setTasks(notCompleted);
                setCompleted(completed);
            });
    });

    // This function is called when the form is submitted
    const handleSubmit = (event) => {
        event.preventDefault();
        axios
            .post("http://localhost:5000/v1/tasks/add", {
                title: formData.title,
                description: formData.description,
            })
            .then((response) => {
                setTasks([...tasks, response.data]);
                // Clear the form
                setFormData({ title: "", description: "" });
            });
    };

    return (
        <div className={styles.container}>
            <Head>
                <title>Tick Todo</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                {/* <h1 className={styles.title}>Tick ~ Todo</h1> */}
                <p className={styles.description}>Keep track of your tasks.</p>
                <form onSubmit={handleSubmit} method="POST">
                    <div className="flex flex-col rounded-2xl border hover:border-green-500 border-gray p-5">
                        <input
                            required
                            placeholder="Title"
                            className="input m-5 max-w-xs border border-gray-200"
                            type="text"
                            value={formData.title}
                            onChange={(event) => setFormData({ ...formData, title: event.target.value })}
                        />
                        <input
                            required
                            placeholder="Description"
                            className="input m-5 max-w-xs border border-gray-200"
                            type="text"
                            value={formData.description}
                            onChange={(event) => setFormData({ ...formData, description: event.target.value })}
                        />
                        <button type="submit" className="btn btn-outline btn-accent">
                            Add Task
                        </button>
                    </div>
                </form>

                {/* Display all tasks as cards */}
                <hr className="my-10 border border-gray w-full" />

                <div className={styles.grid}>
                    {tasks ? (
                        tasks.map((data) => {
                            return <Cards key={data.id} id={data.id} title={data.title} completed={data.completed} description={data.description} />;
                        })
                    ) : (
                        <p>Add some tasks.</p>
                    )}
                </div>

                <hr className="my-10 border border-gray w-full" />

                <div className={styles.grid}>
                    {completed ? (
                        completed.map((data) => {
                            return <Cards key={data.id} id={data.id} title={data.title} completed={data.completed} description={data.description} />;
                        })
                    ) : (
                        <p>Add some tasks.</p>
                    )}
                </div>
            </main>

            <footer className={styles.footer}>
                Powered by{" "}
                <span className={styles.logo}>
                    <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                </span>
            </footer>
        </div>
    );
}
